name: Run Playwright and Deploy Allure Report to GitHub Pages
run-name: "${{ github.ref_name }}_${{ github.run_id }}_${{ github.run_attempt }}"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  e2e-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Get Build Number
        run: echo "Build #${{ github.run_number }}" > build-number-run.txt  

      - name: Run Codacy analysis
        env:
          CODACY_API_TOKEN: ${{ secrets.CODACY_API_TOKEN }}
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          curl -X POST "https://api.codacy.com/2.0/analysis" \
          -H "Authorization: Bearer $CODACY_API_TOKEN" \
          -d '{ "branch": "main" }'  

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Angular in Background
        run: npm run start &
        env:
          CI: true

      - name: Run Playwright Tests
        run: npx playwright test

      # ✅ Generate Allure Report
      - name: Install Allure CLI
        run: npm i -g allure-commandline

      - name: Generate Allure Report
        run: npx allure generate allure-results --clean

      # ✅ Upload Allure Report as Artifact
      - name: Upload Allure Report as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: allure-report/

  deploy:
    needs: e2e-tests
    runs-on: ubuntu-latest

    permissions:
      actions: read
      contents: read
      pages: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm ci

      # ✅ Download Allure Report Artifact
      - name: Download Allure Report Artifact
        uses: actions/download-artifact@v4
        with:
          name: allure-report
          path: allure-report

            # ✅ Install AWS CLI (with update flag)
      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update


      # ✅ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1  # Change this to your bucket region

      # ✅ Upload Allure Report to S3 (AWSCompromisedKeyQuarantineV3 removed from IAM User)
      - name: Upload Allure Report to S3
        run: |
           aws s3 sync allure-report s3://sanjeet-allure-report-bucket/allure-report
          
      # ✅ Build Angular with Allure Report inside
      - name: Build Angular app
        run: npm run build -- --base-href=/angular-playwright-e2e/
      
      # ✅ Upload  Build number to GitHub Pages
      - name: Prepare build runner artifacts
        run: |
         # Create a build-number.txt file with the GitHub run number
         echo "Build #${{ github.run_number }}" > ./dist/angular-playwright-e2e/browser/build-number.txt
  
      # ✅ Copy Allure Report to Angular build folder
      - name: Copy Allure Report to GitHub Pages
        run: |
          mkdir -p ./dist/angular-playwright-e2e/browser/allure-report
          cp -r allure-report/* ./dist/angular-playwright-e2e/browser/allure-report/

      # ✅ Upload Angular Build Artifacts to GitHub Pages
      - name: Upload build artifacts
        uses: actions/upload-pages-artifact@v3
        with:
          name: github-pages
          path: ./dist/angular-playwright-e2e/browser 

      # ✅ Deploy to GitHub Pages
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get S3 URL
        id: s3-url
        run: echo "S3_URL=https://sanjeet-allure-report-bucket.s3.ap-south-1.amazonaws.com/allure-report/index.html" >> $GITHUB_ENV
        
    
    
